# Distributed under the OSI-approved BSD 3-Clause License.
# See accompanying file LICENSE.txt for details.

name: ci-update-submodules

on:
  schedule:
    - cron: '0 0 1,15 * *'  # Runs at 08:00 on day 1 and 15 of the month in UTC zone
  workflow_dispatch:

jobs:
  get-submodules:
    runs-on: ubuntu-latest
    outputs:
      SUBMODULE_LIST: ${{ steps.get-submodules.outputs.SUBMODULE_LIST }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Get submodule directories
        id: get-submodules
        shell: bash
        run: |
          SUBMODULE_PATHS=$(git config --file .gitmodules --get-regexp path | awk '{print $2}')
          SUBMODULE_LIST=$(echo "${SUBMODULE_PATHS}" | jq -R -s -c 'split("\n") | map(select(length > 0))')
          echo "SUBMODULE_LIST=${SUBMODULE_LIST}" >> ${GITHUB_OUTPUT}
          echo "SUBMODULE_LIST:"
          echo "${SUBMODULE_LIST}" | jq "."

  update-submodules:
    needs: get-submodules
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        SUBMODULE_DIR: ${{ fromJSON(needs.get-submodules.outputs.SUBMODULE_LIST) }}
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Print submodule directory
        run: |
          echo "Processing submodule directory: ${{ matrix.SUBMODULE_DIR }}"

      - name: Get Old Commit of the Submodule '${{ matrix.SUBMODULE_DIR }}'
        id: gocs
        shell: bash
        run: |
          OLD_COMMIT=$(git submodule status -- ${{ matrix.SUBMODULE_DIR }} | awk '{print $1}' | sed 's/[^a-f0-9]//g')
          echo "OLD_COMMIT=${OLD_COMMIT}" >> ${GITHUB_OUTPUT}
          echo "OLD_COMMIT: ${OLD_COMMIT}"

      - name: Update submodule from remote
        shell: bash
        run: |
          git submodule update --init --remote ${{ matrix.SUBMODULE_DIR }}

      - name: Get New Commit of the Submodule '${{ matrix.SUBMODULE_DIR }}'
        id: gncs
        shell: bash
        run: |
          NEW_COMMIT=$(git submodule status -- ${{ matrix.SUBMODULE_DIR }} | awk '{print $1}' | sed 's/[^a-f0-9]//g')
          echo "NEW_COMMIT=${NEW_COMMIT}" >> ${GITHUB_OUTPUT}
          echo "NEW_COMMIT: ${NEW_COMMIT}"

      - name: Get Repository Url of the Submodule '${{ matrix.SUBMODULE_DIR }}'
        id: grus
        shell: bash
        run: |
          REPO_URL=$(git config --get submodule.${{ matrix.SUBMODULE_DIR }}.url)
          echo "REPO_URL=${REPO_URL}" >> ${GITHUB_OUTPUT}
          echo "REPO_URL: ${REPO_URL}"

      - name: Add and Commit Changes
        id: acc
        uses: EndBug/add-and-commit@v9
        with:
          cwd: '.'
          add: '.'
          pull: '--rebase --autostash'
          author_name: docs-l10n[bot]
          author_email: 157310748+docs-l10n[bot]@users.noreply.github.com
          message: |
            feat: update '${{ matrix.SUBMODULE_DIR }}' submodule

            Updated '${{ matrix.SUBMODULE_DIR }}' submodule to include the latest changes.

            - Repository: ${{ steps.grus.outputs.REPO_URL }}
            - Old commit: ${{ steps.gocs.outputs.OLD_COMMIT }}
            - New commit: ${{ steps.gncs.outputs.NEW_COMMIT }}

      - name: Check Outputs of the Commit
        if: steps.acc.outputs.committed == 'true'
        shell: bash
        run: |
          echo "Commit's SHA = ${{ steps.acc.outputs.commit_long_sha }}"
          echo "Commit's URL = ${{ github.server_url }}/${{ github.repository }}/commit/${{ steps.acc.outputs.commit_long_sha }}"
