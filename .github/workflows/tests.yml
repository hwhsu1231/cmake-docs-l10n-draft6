# Distributed under the OSI-approved BSD 3-Clause License.
# See accompanying file LICENSE.txt for details.

name: tests

on:
  push:
    branches: 
      - 'source'
    paths:
      - '.github/actions/cmake-configure/action.yml'
      - '.github/workflows/tests.yml'
  workflow_dispatch:

jobs:
  single:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - 'windows-latest'
          - 'ubuntu-latest'
          - 'macos-latest'
    steps:
      - name: Check Contexts, Inputs, and Secrets
        shell: bash
        run: |
          echo "[Contexts]"
          echo "github.job = ${{ github.job }}"
          echo "github.ref = ${{ github.ref }}"
          echo "github.ref_name = ${{ github.ref_name }}"
          echo "github.event.action = ${{ github.event.action }}"
          echo "github.event.number = ${{ github.event.number }}"
          echo "github.event_name = ${{ github.event_name }}"
          echo "[Inputs]"
          echo "inputs.CHECKOUT = ${{ inputs.CHECKOUT }}"
          echo "inputs.VERSION = ${{ inputs.VERSION }}"
          echo "inputs.LANGUAGE = ${{ inputs.LANGUAGE }}"
          echo "inputs.UPDATE_MODE = ${{ inputs.UPDATE_MODE }}"
          echo "inputs.CALLER_JOB = ${{ inputs.CALLER_JOB }}"
          echo "inputs.ENABLE_JOB = ${{ inputs.ENABLE_JOB }}"
          echo "[Secrets]"
          echo "secrets.APP_ID = ${{ secrets.APP_ID }}"
          echo "secrets.APP_PRIVATE_KEY = ${{ secrets.APP_PRIVATE_KEY }}"
          echo "secrets.GH_PERSONAL_TOKEN = ${{ secrets.GH_PERSONAL_TOKEN }}"
          echo "secrets.CROWDIN_PERSONAL_TOKEN = ${{ secrets.CROWDIN_PERSONAL_TOKEN }}"

      - name: Checkout to '${{ github.ref }}'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          submodules: true

      - name: Setup CMake 3.23
        uses: jwlawson/actions-setup-cmake@v2.0
        with:
          cmake-version: '3.23'

      # - name: Check whether CMake is installed
      #   run: |
      #     which cmake && cmake --version

      - name: Configure the project
        uses: ./.github/actions/cmake-configure
        with:
          source-directory: '${{ github.workspace }}'
          language: 'all'
          version: 'git-master'

      - name: Build the 'prepare_repositories' target
        uses: ./.github/actions/cmake-build
        with:
          source-directory: '${{ github.workspace }}'
          language: 'all'
          target: 'prepare_repositories'

      # - name: Check whether CMake is installed
      #   run: |
      #     which cmake && cmake --version

      - name: Check whether Node.js is installed (for Windows)
        if: ${{ runner.os == 'Windows' }}
        shell: cmd
        run: |
          where node && node --version

      - name: Check whether Node.js is installed (for Linux/macOS)
        if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
        shell: bash
        run: |
          which node && node --version
