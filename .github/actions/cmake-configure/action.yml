name: cmake-configure

description: Configure the project with CMake

inputs:
  cmake-version:
    required: true
    description: ''
  source-directory:     # required
    required: false
    description: ''
    default: '${{ github.workspace }}'
  preset-name:          # required
    required: false
    description: ''
    default: 'all'
  cache-language:       # required
    required: false
    description: ''
    default: '[default]'
  cache-version:        # required
    required: false
    description: ''
    default: '[default]'
  cache-update-mode:    # required
    required: false
    description: ''
    default: 'ON'
  cache-install-mode:   # required
    required: false
    description: ''
    default: 'OFF'
  cache-auto-depend:
    required: false
    description: ''
    default: '[default]'
  cache-remove-redundant:
    required: false
    description: ''
    default: 'ON'
  cache-compend-version:
    required: false
    description: ''
    default: 'git-master'
  cache-exact-version-git:
    required: false
    description: ''
    default: '[default]'
  cache-exact-version-python:
    required: false
    description: ''
    default: '[default]'
  cache-exact-version-gettext:
    required: false
    description: ''
    default: '[default]'
  cache-exact-version-crowdin:
    required: false
    description: ''
    default: '[default]'
  cache-gettext-wrap-width:
    required: false
    description: ''
    default: '79'
  cache-gettext-additional-targets:
    required: false
    description: ''
    default: '[default]'
  cache-sphinx-builder:
    required: false
    description: ''
    default: 'html'
  cache-sphinx-console-locale:
    required: false
    description: ''
    default: '[default]'
  cache-sphinx-verbose-level:
    required: false
    description: ''
    default: '[default]'
  cache-sphinx-job-number:
    required: false
    description: ''
    default: '[default]'

runs:
  using: composite
  steps:
    # - name: Print All Inputs JSON
    #   shell: bash
    #   run: |
    #     echo '[Inputs]'
    #     echo '${{ toJSON(inputs) }}'
    #     echo '[GitHub]'
    #     echo '${{ toJSON(github) }}'

    - name: Install CMake 3.15
      uses: jwlawson/actions-setup-cmake@v2.0
      with:
        cmake-version: '3.15'

    - shell: bash
      id: cmake-args
      run: |
        INPUTS_JSON=$(echo '${{ toJSON(inputs) }}' | jq -c)
        INPUTS_KEYS=$(echo "$INPUTS_JSON" | jq -r 'keys[]')
        CMAKE_ARGS=()
        for KEY in $INPUTS_KEYS; do
          VALUE=$(echo "$INPUTS_JSON" | jq -r --arg key "${KEY}" '.[$key]')
          CMAKE_ARG=""
          if   [[ "${KEY}" == "source-directory" ]]; then
            CMAKE_ARG="-S=${VALUE}"
          elif [[ "${KEY}" == "preset-name" ]]; then
            CMAKE_ARG="--preset=${VALUE}"
          elif [[ "${KEY}" =~ ^cache- ]]; then
            if [[ "$VALUE" != "[default]" ]]; then
              CMAKE_ARG="-D$(echo "${KEY}" | sed 's/^cache-\(.*\)/\U\1/' | sed 's/-/_/g')=${VALUE}"
            fi
          else
            echo "KEY is other."
          fi
          CMAKE_ARGS+=($CMAKE_ARG)
        done
        # echo "Printing CMAKE_ARGS:"
        # for ARG in "${CMAKE_ARGS[@]}"; do
        #   echo "$ARG"
        # done
        echo "::set-output name=CMAKE_ARGS::${CMAKE_ARGS[@]}"

    - name: Configure the Project (Windows)
      if: ${{ runner.os == 'Windows' }}
      shell: cmd
      run: |
        set CMAKE_ARGS=${{ steps.cmake-args.outputs.CMAKE_ARGS }}

        echo "CMake arguments:"
        for %%a in (%CMAKE_ARGS%) do echo %%a

        cmake %CMAKE_ARGS%

    - name: Configure the Project (Linux)
      if: ${{ runner.os == 'Linux' }}
      shell: cmd
      run: |
        CMAKE_ARGS="${{ steps.cmake-args.outputs.CMAKE_ARGS }}"

        echo "CMake arguments:"
        for arg in "${CMAKE_ARGS[@]}"; do
          echo "$arg"
        done

        cmake "${CMAKE_ARGS[@]}"

