# Distributed under the OSI-approved BSD 3-Clause License.
# See accompanying file LICENSE.txt for details.

name: crowdin-download-translations

description: Download Translations of Documents from Crowdin

inputs:
  crowdin-config-file:      # required
    required: true
    description: xxx
  crowdin-branch-name:      # required
    required: true
    description: xxx
  crowdin-personal-token:   # required
    required: true
    description: xxx
  crowdin-language-list:
    required: true
    description: xxx
    default: ''
  crowdin-verbose:
    required: false
    description: xxx
    default: 'false'
  crowdin-dryrun:
    required: false
    description: xxx
    default: 'false'
  # source-directory:   # required
  #   required: true
  #   description: 'Source directory of the CMake Project.'
  # preset:             # required
  #   required: true
  #   description: 'Configure Preset Name.'
  # target:             # required
  #   required: true
  #   description: 'CMake Build Target'

runs:
  using: composite
  steps:
    - name: Get Crowdin Arguments by Inputs
      id: crowdin-args
      shell: bash
      run: |
        INPUTS_JSON=$(echo '${{ toJSON(inputs) }}' | jq -c)
        INPUTS_KEYS=$(echo "${INPUTS_JSON}" | jq -r 'keys[]' | tr -d '\r')
        CROWDIN_ARGS=()
        for KEY in ${INPUTS_KEYS}; do
          VALUE=$(echo "${INPUTS_JSON}" | jq -r --arg key "${KEY}" '.[$key]')
          echo "(KEY, VALUE) = (${KEY}, ${VALUE})"
          CROWDIN_ARG=""
          if [[ "${KEY}" == "crowdin-language-list" ]]; then
            if [[ "${VALUE}" != "" ]]; then
              IFS=","
              read -r -a CROWDIN_LANGUAGE_LIST <<< "${{ inputs.crowdin-language-list }}"
              unset IFS
              for CROWDIN_LANGUAGE in "${CROWDIN_LANGUAGE_LIST[@]}"; do
                if [[ -z ${CROWDIN_ARG} ]]; then
                  CROWDIN_ARG="--language ${CROWDIN_LANGUAGE}"
                else
                  CROWDIN_ARG="${CROWDIN_ARG} --language ${CROWDIN_LANGUAGE}"
                fi
              done
            fi
          elif [[ "${KEY}" == "crowdin-verbose" ]]; then
            if [[ "${VALUE}" == "true" ]]; then
              CROWDIN_ARG="--verbose"
            fi
          elif [[ "${KEY}" == "crowdin-dryrun" ]]; then
            if [[ "${VALUE}" == "true" ]]; then
              CROWDIN_ARG="--dryrun"
            fi
          fi
          CROWDIN_ARGS+=(${CROWDIN_ARG})
        done
        echo "CROWDIN_ARGS=${CROWDIN_ARGS[@]}" >> ${GITHUB_OUTPUT}

    - name: Crowdin Download Documents from the '${{ inputs.VERSION }}' Branch
      uses: crowdin/github-action@v2
      with:
        command: 'download'
        command_args: '${{ steps.crowdin-args.outputs.CROWDIN_ARGS }}'
      # shell: bash
      # run: |
      #   echo "${{ steps.crowdin-args.outputs.CROWDIN_ARGS }}"